(window.webpackJsonp=window.webpackJsonp||[]).push([[78],{382:function(n,t,e){"use strict";e.r(t);var r=e(22),s=Object(r.a)({},(function(){var n=this,t=n.$createElement,e=n._self._c||t;return e("ContentSlotsDistributor",{attrs:{"slot-key":n.$parent.slotKey}},[e("h2",{attrs:{id:"封装同步方法"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#封装同步方法"}},[n._v("#")]),n._v(" 封装同步方法")]),n._v(" "),e("h4",{attrs:{id:"request-js"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#request-js"}},[n._v("#")]),n._v(" request.js")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("const requestSync = require(\"request\");\n\nlet synchronous_post = function (url, params) {\n\n    let options = {\n        url: url,\n        form: params\n    };\n\n    return new Promise(function (resolve, reject) {\n        requestSync.get(options, function (error, response, body) {\n            if (error) {\n                reject(error);\n            } else {\n                resolve(body);\n            }\n        });\n    });\n}\n\nlet syncBody = async function (url) {\n    var url = url;\n    let body = await synchronous_post(url);\n    return body.toString('utf-8');\n}\n\nmodule.exports = syncBody;  //暴露请求方法,该方法是GET,POST同理\n")])])]),e("h2",{attrs:{id:"使用"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[n._v("#")]),n._v(" 使用")]),n._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[n._v("// 在其他函数内部使用\napp.get('/', async (req, res)=>{\n    var data=await syncBody('http://www.baidu.com')  //在其他函数中使用，可以直接获取数据,express举例\n    res.send(data);\n})\n\n// 在外部使用\nvar urls=[\n     'http://www.qq.com',\n     'http://www.baidu.com',\n     'http://www.sina.com.cn'\n]\nurls.forEach(element => {\n    var body = syncBody(element);\t//函数外部使用,返回的是promise需要.then去解析数据\nbody.then(data=>{\n    console.log(data);\n    })\n});\n\n")])])])])}),[],!1,null,null,null);t.default=s.exports}}]);