(window.webpackJsonp=window.webpackJsonp||[]).push([[40],{345:function(t,n,e){"use strict";e.r(n);var r=e(22),a=Object(r.a)({},(function(){var t=this,n=t.$createElement,e=t._self._c||n;return e("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[e("h2",{attrs:{id:"背景"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#背景"}},[t._v("#")]),t._v(" 背景")]),t._v(" "),e("blockquote",[e("p",[t._v("获取运行中项目对外提供的接口信息,免去人工统计操作")])]),t._v(" "),e("h2",{attrs:{id:"实现"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#实现"}},[t._v("#")]),t._v(" 实现")]),t._v(" "),e("div",{staticClass:"language- extra-class"},[e("pre",{pre:!0,attrs:{class:"language-text"}},[e("code",[t._v('package it.ssm.controller;\n\n\n\nimport java.util.ArrayList;\nimport java.util.HashMap;\nimport java.util.List;\nimport java.util.Map;\n\nimport com.alibaba.fastjson.JSON;\nimport org.springframework.beans.factory.annotation.Autowired;\nimport org.springframework.stereotype.Controller;\nimport org.springframework.ui.Model;\nimport org.springframework.web.bind.annotation.RequestMapping;\nimport org.springframework.web.bind.annotation.ResponseBody;\nimport org.springframework.web.method.HandlerMethod;\nimport org.springframework.web.servlet.mvc.condition.PatternsRequestCondition;\nimport org.springframework.web.servlet.mvc.condition.RequestMethodsRequestCondition;\nimport org.springframework.web.servlet.mvc.method.RequestMappingInfo;\nimport org.springframework.web.servlet.mvc.method.annotation.RequestMappingHandlerMapping;\n\n\n\n\n@Controller\n@RequestMapping("/servlet")\npublic class getServlet{\n\n    @Autowired\n    private RequestMappingHandlerMapping requestMappingHandlerMapping;\n\n    @ResponseBody\n    @RequestMapping("/index")\n    public String getServlet()  {\n\n        List<HashMap<String, String>> urlList = new ArrayList<HashMap<String, String>>();\n\n        Map<RequestMappingInfo, HandlerMethod> map = requestMappingHandlerMapping.getHandlerMethods();\n        for (Map.Entry<RequestMappingInfo, HandlerMethod> m : map.entrySet()) {\n            HashMap<String, String> hashMap = new HashMap<String, String>();\n            RequestMappingInfo info = m.getKey();\n            HandlerMethod method = m.getValue();\n            PatternsRequestCondition p = info.getPatternsCondition();\n            for (String url : p.getPatterns()) {\n                hashMap.put("url", url);\n            }\n            hashMap.put("className", method.getMethod().getDeclaringClass().getName()); // 类名\n            hashMap.put("method", method.getMethod().getName()); // 方法名\n            RequestMethodsRequestCondition methodsCondition = info.getMethodsCondition();\n            String type = methodsCondition.toString();\n            if (type != null && type.startsWith("[") && type.endsWith("]")) {\n                type = type.substring(1, type.length() - 1);\n                hashMap.put("type", type); // 方法名\n            }\n            urlList.add(hashMap);\n        }\n\n        String results = JSON.toJSONString(urlList);\n        return results;\n\n    }\n}\n\n')])])]),e("h6",{attrs:{id:"效果"}},[e("a",{staticClass:"header-anchor",attrs:{href:"#效果"}},[t._v("#")]),t._v(" 效果")]),t._v(" "),e("p",[e("img",{attrs:{src:"/java/case/spring_controller/spring_controller.jpg",alt:""}})])])}),[],!1,null,null,null);n.default=a.exports}}]);