(window.webpackJsonp=window.webpackJsonp||[]).push([[50],{356:function(e,r,a){"use strict";a.r(r);var s=a(22),o=Object(s.a)({},(function(){var e=this,r=e.$createElement,a=e._self._c||r;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h2",{attrs:{id:"shiro-1-2-4-rce-shiro550"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shiro-1-2-4-rce-shiro550"}},[e._v("#")]),e._v(" shiro <= 1.2.4 RCE (shiro550)")]),e._v(" "),a("h4",{attrs:{id:"复现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#复现"}},[e._v("#")]),e._v(" 复现")]),e._v(" "),a("ul",[a("li",[e._v("将war包放到tomcat的webapp目录下即可\n"),a("a",{attrs:{href:"/java/shiro/shiro.war"}},[e._v("shiro.war")])]),e._v(" "),a("li",[e._v("使用工具测试\n"),a("a",{attrs:{href:"/java/shiro/ShiroExploit-v2.3.jar"}},[e._v("ShiroExploit-v2.3.jar")])])]),e._v(" "),a("p",[a("img",{attrs:{src:"/java/shiro/shiroExploit.jpg",alt:""}})]),e._v(" "),a("h4",{attrs:{id:"分析"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析"}},[e._v("#")]),e._v(" 分析")]),e._v(" "),a("p",[a("img",{attrs:{src:"/java/shiro/shiro%E8%B0%83%E7%94%A8%E9%93%BE.jpg",alt:""}})]),e._v(" "),a("h3",{attrs:{id:"shiro提供记住我-rememberme-功能-用户登陆成功后会生成经过加密并base64编码的cookie，在服务端接收cookie值后-base64解码-aes解密-反序列化。因此我们只需要构造恶意的对象-进行-序列化-aes-加密-base64编码-将其作为rememberme的cookie字段发送到服务器端-shiro就会触发反序列化漏洞"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shiro提供记住我-rememberme-功能-用户登陆成功后会生成经过加密并base64编码的cookie，在服务端接收cookie值后-base64解码-aes解密-反序列化。因此我们只需要构造恶意的对象-进行-序列化-aes-加密-base64编码-将其作为rememberme的cookie字段发送到服务器端-shiro就会触发反序列化漏洞"}},[e._v("#")]),e._v(" shiro提供记住我(RememberMe)功能,用户登陆成功后会生成经过加密并Base64编码的cookie，在服务端接收cookie值后,Base64解码--\x3eAES解密--\x3e反序列化。因此我们只需要构造恶意的对象,进行 序列化 --\x3e AES 加密 --\x3e Base64编码 ,将其作为RememberMe的cookie字段发送到服务器端,shiro就会触发反序列化漏洞")]),e._v(" "),a("h4",{attrs:{id:"shiro-1-2-4版本默认固定密钥"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shiro-1-2-4版本默认固定密钥"}},[e._v("#")]),e._v(" Shiro 1.2.4版本默认固定密钥:")]),e._v(" "),a("p",[a("code",[e._v('private static final byte[] DEFAULT_CIPHER_KEY_BYTES = Base64.decode("kPH+bIxk5D2deZiIxcaaaA==");')])]),e._v(" "),a("h4",{attrs:{id:"shiro-1-2-4以上版本官方移除了代码中的默认密钥，要求开发者自己设置，如果开发者没有设置，则默认动态生成，降低了固定密钥泄漏的风险-但是由于其他第三方框架会存在整合shiro问题-会自行设置key问题，因此从网上获取了top100的shirokey可作为测试使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shiro-1-2-4以上版本官方移除了代码中的默认密钥，要求开发者自己设置，如果开发者没有设置，则默认动态生成，降低了固定密钥泄漏的风险-但是由于其他第三方框架会存在整合shiro问题-会自行设置key问题，因此从网上获取了top100的shirokey可作为测试使用"}},[e._v("#")]),e._v(" Shiro 1.2.4以上版本官方移除了代码中的默认密钥，要求开发者自己设置，如果开发者没有设置，则默认动态生成，降低了固定密钥泄漏的风险,但是由于其他第三方框架会存在整合shiro问题,会自行设置key问题，因此从网上获取了top100的shirokey可作为测试使用")]),e._v(" "),a("p",[a("a",{attrs:{href:"/java/shiro/shiro550key.txt"}},[e._v("shiro550keytop100")])]),e._v(" "),a("h2",{attrs:{id:"shirokey爆破-无需出网"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shirokey爆破-无需出网"}},[e._v("#")]),e._v(" shiroKey爆破[无需出网]")]),e._v(" "),a("ul",[a("li",[e._v("当密钥不正确或类型转换异常时，目标Response包含Set-Cookie：rememberMe=deleteMe字段")]),e._v(" "),a("li",[e._v("而当密钥正确且没有类型转换异常时，返回包不存在Set-Cookie：rememberMe=deleteMe字段。")])]),e._v(" "),a("ol",[a("li",[a("p",[e._v("密钥不正确时")]),e._v(" "),a("p",[e._v("Key不正确，解密时org.apache.shiro.crypto.JcaCipherService#crypt抛出异常")]),e._v(" "),a("p",[e._v("走进org.apache.shiro.web.servlet.impleCookie#removeFrom方法，在返回包中添加了rememberMe=deleteMe字段")])]),e._v(" "),a("li",[a("p",[e._v("类型转换失败时")]),e._v(" "),a("p",[e._v("org.apache.shiro.mgt.AbstractRememberMeManager#deserialize进行数据反序列化，返回结果前有对反序列化结果对象做PrincipalCollection的强制类型转换。")]),e._v(" "),a("p",[e._v("反序列化结果对象与PrincipalCollection并没有继承关系")]),e._v(" "),a("p",[e._v("走进org.apache.shiro.web.servlet.impleCookie#removeFrom方法，在返回包中添加了rememberMe=deleteMe字段")])])]),e._v(" "),a("h4",{attrs:{id:"分析-2"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分析-2"}},[e._v("#")]),e._v(" 分析:")]),e._v(" "),a("p",[e._v("根据上面的分析，我们需要构造payload排除类型转换错误，进而准确判断密钥。当序列化对象继承PrincipalCollection时，类型转换正常，SimplePrincipalCollection是已存在的可利用类。\n创建一个SimplePrincipalCollection对象并将其序列化。")]),e._v(" "),a("p",[e._v("将序列化数据基于key进行AES加密并base64编码发起请求，当返回包不存在Set-Cookie：rememberMe=deleteMe字段时，说明密钥与目标匹配。")]),e._v(" "),a("h2",{attrs:{id:"shiro-721"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#shiro-721"}},[e._v("#")]),e._v(" shiro-721")]),e._v(" "),a("ul",[a("li",[e._v("cbc字节翻转攻击")]),e._v(" "),a("li",[e._v("AES-128-CBC")])])])}),[],!1,null,null,null);r.default=o.exports}}]);